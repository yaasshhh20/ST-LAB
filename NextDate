def is_leap_year(year):
    return (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0)

def next_date(month, day, year):
    # Days in each month
    days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
    
    if is_leap_year(year):
        days_in_month[1] = 29
    
    if month < 1 or month > 12:
        return "Invalid month. Please enter a value between 1 and 12."
    
    if day < 1 or day > days_in_month[month - 1]:
        return f"Invalid day for the given month. Please enter a value between 1 and {days_in_month[month - 1]}."
    
    if year < 1812 or year > 2013:
        return "Invalid year. Please enter a value between 1812 and 2013."

    if day < days_in_month[month - 1]:
        day += 1
    else:
        day = 1
        if month == 12:
            month = 1
            year += 1
        else:
            month += 1
    
    return month, day, year

test_cases = [
    (2, 28, 2000),   # Valid - Leap Year
    (2, 28, 2001),   # Valid
    (4, 30, 2012),   # Valid
    (12, 31, 2013),  # Valid
    (0, 15, 2000),   # Invalid month
    (5, 32, 2000),   # Invalid day
    (5, 15, 2014)    # Invalid year
]

for month, day, year in test_cases:
    result = next_date(month, day, year)
    print(f"Input: Month={month}, Day={day}, Year={year} -> Output: {result}")
